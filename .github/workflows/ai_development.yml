name: AI Development Workflow

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue Number'
        required: true
      issue_title:
        description: 'Issue Title'
        required: true
      issue_body:
        description: 'Issue Body'
        required: false
      repository:
        description: 'Source Repository'
        required: true

jobs:
  ai-development:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout AI Dev Orchestrator
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Process Issue
      env:
        ISSUE_NUMBER: ${{ github.event.inputs.issue_number }}
        ISSUE_TITLE: ${{ github.event.inputs.issue_title }}
        ISSUE_BODY: ${{ github.event.inputs.issue_body }}
        SOURCE_REPOSITORY: ${{ github.event.inputs.repository }}
      run: |
        # Save issue details for processing
        mkdir -p analysis
        echo "title: $ISSUE_TITLE" > analysis/issue_details.txt
        echo "number: $ISSUE_NUMBER" >> analysis/issue_details.txt
        echo "repository: $SOURCE_REPOSITORY" >> analysis/issue_details.txt
        echo "requirements: $ISSUE_BODY" >> analysis/issue_details.txt
        
        # Run AI development script
        python src/main.py
    
    - name: Update Source Issue
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GHUB_TOKEN}}
        script: |
          const issueNumber = process.env.ISSUE_NUMBER;
          const sourceRepo = process.env.SOURCE_REPOSITORY;
          
          github.rest.issues.createComment({
            owner: sourceRepo.split('/')[0],
            repo: sourceRepo.split('/')[1],
            issue_number: parseInt(issueNumber),
            body: 'ðŸ¤– AI Development completed. Check generated code in AI Dev Orchestrator.'
          });
          
          github.rest.issues.update({
            owner: sourceRepo.split('/')[0],
            repo: sourceRepo.split('/')[1],
            issue_number: parseInt(issueNumber),
            state: 'closed'
          });