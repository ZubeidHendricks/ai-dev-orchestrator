name: AI Development Workflow

on:
  issues:
    types: [opened, labeled]

jobs:
  analyze-and-generate:
    if: contains(github.event.issue.labels.*.name, 'ai-development')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install groq
    
    - name: Run AI Development Orchestrator
      env:
        GROQ_API_KEY: ${{ secrets.GROQ }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        python src/main.py
    
    - name: Create Pull Request
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Extract issue details
        ISSUE_TITLE=$(jq -r '.event.issue.title' <<< '${{ toJson(github) }}')
        ISSUE_BODY=$(jq -r '.event.issue.body' <<< '${{ toJson(github) }}')
        
        # Create a new branch
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git checkout -b ai-generated-code-$(date +"%Y%m%d-%H%M%S")
        
        # Commit generated code (assuming main.py generates code to a file)
        git add .
        git commit -m "AI Generated Code for: $ISSUE_TITLE" || echo "No changes to commit"
        
        # Push branch and create PR
        git push origin HEAD
        gh pr create \
          --title "AI Generated: $ISSUE_TITLE" \
          --body "Automated code generation based on issue:
$ISSUE_BODY

Generated by AI Development Orchestrator" \
          --label ai-generated